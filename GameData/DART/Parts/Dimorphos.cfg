PART
{
	name = Dimorphos
	module = Part
	author = JadeOfMaar
	MODEL
	{
		model = DART/Parts/Dimorphos
		scale = 73.841184, 73.841184, 73.841184
	}
	rescaleFactor = 1
	TechRequired = Unresearcheable
	entryCost = 0
	cost = 0
	category = none
	subcategory = 0
	title = Dimorphos
	manufacturer = Team Galileo
	description = The moon of a binary asteroid.
	attachRules = 1,1,1,1,1
	mass = 4000000
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 9999
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 2500
	explosionPotential = 1.0
	skipColliderIgnores = True
	vesselType = SpaceObject
	skinInternalConductionMult = 100
	skinMassPerArea = 100
	bulkheadProfiles = roid
	tags = asteroid roid spud

	MODULE
	{
		// We need to use a custom asteroid module so that we can use our own 3D mesh and not a procedurally generated one.
		name = ModuleCustomAsteroid
		density = 0.03
		secondaryRate = 0.05
		AsteroidName = Dimorphos
	}

	MODULE
	{
		name = ModuleAsteroidInfo
	}

	MODULE
	{
		name = ModuleAsteroidResource
		highRange = 95
		lowRange = 50
		presenceChance = 100
		resourceName = Ore
	}

//	RESOURCE
//	{
//		name = Ore
//		amount = 399985000
//		maxAmount = 399985000
//	}
}

// Template for creating the Dimorphos space object.
SPACE_OBJECT
{
	// Identifier for the space object.
	name = DimorphosSpaceObject

	// Name of the part to spawn
	partName = Dimorphos

	// Normally an anomaly is something like OBJ-UWN-474 and it is automatically generated.
	// However, you can override the name by specifying the vesselName field.
	// Warning: using this can lead to duplicate vessel names if maxInstances is > 1.
	vesselName = Dimorphos

	// Like asteroids, space anomalies have a size class that ranges from Size A (12 meters) to Size I (100+ meters).
	// The default is A.
	sizeClass = I

	// The celestial body to spawn around.
	bodyOrbited = Didymos
	
	// The Semi-Major axis of the orbit.
	orbitSMA = 1180

	// The eccentrcity of the orbit.
	orbitEccentricity = 0

	// The inclination of the orbit. Default is -1, which enables random inclination.
	orbitInclination = 0

	// Maximum number of objects of this type that may exist at any given time. Default is 1.
	maxInstances = 1
}
